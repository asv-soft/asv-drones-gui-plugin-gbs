name: Build and Publish NuGet

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Add NuGet source
        run: dotnet nuget add source "https://nuget.pkg.github.com/asv-soft/index.json" \--username '${{secrets.USER_NAME}}' \--password '${{secrets.GIHUB_NUGET_AUTH_TOKEN}}' \--store-password-in-clear-text

      - name: Install dependencies
        run: dotnet restore ./src

      - name: Build
        run: dotnet build ./src/Asv.Drones.Gui.Plugin.Gbs/Asv.Drones.Gui.Plugin.Gbs.csproj --configuration Release --no-restore

      - name: Set version variable
        env:
          TAG: ${{ github.ref_name }}
        run: echo "VERSION=${TAG#v}" >> $GITHUB_ENV
        
      - name: Read version from Directory.Build.props
        id: read-version
        run: echo "::set-output name=version::$(grep -oP '<ProductVersion>\K[^<]+' ./src/Directory.Build.props)"

      - name: Compare tag with NuGet package version
        run: |
          if [ "${{ steps.read-version.outputs.version }}" != "${{ env.VERSION }}" ]; then
            echo "Error: Tag does not match NuGet package version"
            exit 1
          fi

      - name: Pack package
        run: dotnet pack ./src/Asv.Drones.Gui.Plugin.Gbs/Asv.Drones.Gui.Plugin.Gbs.csproj -c Release /p:Version=${VERSION} --no-build -o .

      - name: List output files
        run: ls -la

      - name: Push package to GitHub
        run: dotnet nuget push Asv.Drones.Gui.Plugin.Gbs.${VERSION}.nupkg --api-key ${{ secrets.GIHUB_NUGET_AUTH_TOKEN }} --skip-duplicate --source "https://nuget.pkg.github.com/asv-soft/index.json"
